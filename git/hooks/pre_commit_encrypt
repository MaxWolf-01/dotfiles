#!/usr/bin/env bash
set -euo pipefail

# Pre-commit hook to encrypt working‑tree content of added/modified staged files via OpenSSL
# – Encrypts only files staged for commit (skips .gitignored files and existing .enc files)
# – Reads symmetric key from $HOME/.local/secrets/enc_key
# – Produces corresponding .enc files, sets their permissions to 600, and stages them
# - Keeps plaintext files locally, but never commits them (use --no-verify)
# – Uses `set -euo pipefail` so that any failure aborts the commit

KEY_FILE="$HOME/.local/secrets/enc_key"
CIPHER="aes-256-cbc"

[ -f "$KEY_FILE" ] || { echo "Pre-commit: encryption key not found at $KEY_FILE"; exit 1; }

# For every added/modified file in the index:
git diff --cached --name-only --diff-filter=AM -z | \
  while IFS= read -r -d '' file; do
    # skip already‑encrypted files and anything git‑ignored
    [[ "$file" =~ \.enc$ ]] && continue
    git check-ignore -q -- "$file" && continue

    # encrypt working‑tree content → file.enc
    openssl enc -"$CIPHER" -salt -pbkdf2 -iter 10000 \
      -in "$file" \
      -out "${file}.enc" \
      -pass file:"$KEY_FILE"

    chmod 600 "${file}.enc"         # restrict permissions
    git add "${file}.enc"           # stage .enc
    git rm --cached --quiet "$file" # unstage plaintext
  done

#!/bin/sh

# Post-commit hook to decrypt files with .enc extension

KEY_FILE=".encryption_key"
DECRYPTION_CIPHER="aes-256-cbc"

if [ ! -f "$KEY_FILE" ]; then
  echo "Post-commit: Encryption key file not found!"
  exit 1
fi

DECRYPTION_KEY=$(cat "$KEY_FILE")

for f in $(git diff --name-only HEAD^ HEAD); do
  # Check if file extension is .enc and if the corresponding decrypted file exists (i.e. the file is staged for deletion, so we don't need to decrypt it)
  if [ "$(echo "$f" | sed 's/.*\.//')" = "enc" ] && git ls-files --error-unmatch "$f" > /dev/null 2>&1; then
    # Decrypt the file
    if openssl enc -d -${DECRYPTION_CIPHER} -pbkdf2 -iter 10000 -in "$f" -out "${f%.enc}" -pass pass:"$DECRYPTION_KEY"; then
      echo "Post-commit: Decrypted ${f%.enc}"
    else
      echo "Post-commit: Failed to decrypt $f"
    fi
  fi
done
